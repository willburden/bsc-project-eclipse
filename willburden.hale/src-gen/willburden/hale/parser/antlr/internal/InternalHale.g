/*
 * generated by Xtext 2.34.0
 */
grammar InternalHale;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package willburden.hale.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package willburden.hale.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import willburden.hale.services.HaleGrammarAccess;

}

@parser::members {

 	private HaleGrammarAccess grammarAccess;

    public InternalHaleParser(TokenStream input, HaleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Hale";
   	}

   	@Override
   	protected HaleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHale
entryRuleHale returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHaleRule()); }
	iv_ruleHale=ruleHale
	{ $current=$iv_ruleHale.current; }
	EOF;

// Rule Hale
ruleHale returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHaleAccess().getHaleAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHaleAccess().getBlockBlockParserRuleCall_1_0());
				}
				lv_block_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHaleRule());
					}
					set(
						$current,
						"block",
						lv_block_1_0,
						"willburden.hale.Hale.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0_0());
					}
					lv_statements_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_1_0,
							"willburden.hale.Hale.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBracedBlockParserRuleCall_0());
		}
		this_BracedBlock_0=ruleBracedBlock
		{
			$current = $this_BracedBlock_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfParserRuleCall_1());
		}
		this_If_1=ruleIf
		{
			$current = $this_If_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileParserRuleCall_2());
		}
		this_While_2=ruleWhile
		{
			$current = $this_While_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getPrintParserRuleCall_3_0_0());
				}
				this_Print_3=rulePrint
				{
					$current = $this_Print_3.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBindingParserRuleCall_3_0_1());
				}
				this_Binding_4=ruleBinding
				{
					$current = $this_Binding_4.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_3_0_2());
				}
				this_Assignment_5=ruleAssignment
				{
					$current = $this_Assignment_5.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getStatementAccess().getExpressionParserRuleCall_3_0_3());
				}
				this_Expression_6=ruleExpression
				{
					$current = $this_Expression_6.current;
					afterParserOrEnumRuleCall();
				}
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleBracedBlock
entryRuleBracedBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracedBlockRule()); }
	iv_ruleBracedBlock=ruleBracedBlock
	{ $current=$iv_ruleBracedBlock.current; }
	EOF;

// Rule BracedBlock
ruleBracedBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBracedBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getBracedBlockAccess().getBlockParserRuleCall_1());
		}
		this_Block_1=ruleBlock
		{
			$current = $this_Block_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBracedBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getExpression7ParserRuleCall());
	}
	this_Expression7_0=ruleExpression7
	{
		$current = $this_Expression7_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression7
entryRuleExpression7 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression7Rule()); }
	iv_ruleExpression7=ruleExpression7
	{ $current=$iv_ruleExpression7.current; }
	EOF;

// Rule Expression7
ruleExpression7 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression7Access().getExpression6ParserRuleCall_0());
		}
		this_Expression6_0=ruleExpression6
		{
			$current = $this_Expression6_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression7Access().getLogicalAndLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='and'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpression7Access().getAndKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression7Access().getRightExpression6ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression7Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"willburden.hale.Hale.Expression6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression7Access().getLogicalOrLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='or'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression7Access().getOrKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression7Access().getRightExpression6ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression6
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression7Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"willburden.hale.Hale.Expression6");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression6
entryRuleExpression6 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression6Rule()); }
	iv_ruleExpression6=ruleExpression6
	{ $current=$iv_ruleExpression6.current; }
	EOF;

// Rule Expression6
ruleExpression6 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression6Access().getExpression5ParserRuleCall_0());
		}
		this_Expression5_0=ruleExpression5
		{
			$current = $this_Expression5_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression6Access().getEqualityLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='=='
				{
					newLeafNode(otherlv_2, grammarAccess.getExpression6Access().getEqualsSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression6Access().getRightExpression5ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression6Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"willburden.hale.Hale.Expression5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression6Access().getInequalityLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='!='
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression6Access().getExclamationMarkEqualsSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression6Access().getRightExpression5ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression5
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression6Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"willburden.hale.Hale.Expression5");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression5
entryRuleExpression5 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression5Rule()); }
	iv_ruleExpression5=ruleExpression5
	{ $current=$iv_ruleExpression5.current; }
	EOF;

// Rule Expression5
ruleExpression5 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression5Access().getExpression4ParserRuleCall_0());
		}
		this_Expression4_0=ruleExpression4
		{
			$current = $this_Expression4_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression5Access().getLessThanOrEqualLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='<='
				{
					newLeafNode(otherlv_2, grammarAccess.getExpression5Access().getLessThanSignEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression5Access().getRightExpression4ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression5Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"willburden.hale.Hale.Expression4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression5Access().getLessThanLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='<'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression5Access().getLessThanSignKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression5Access().getRightExpression4ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression5Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"willburden.hale.Hale.Expression4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression5Access().getGreaterThanOrEqualLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='>='
				{
					newLeafNode(otherlv_8, grammarAccess.getExpression5Access().getGreaterThanSignEqualsSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression5Access().getRightExpression4ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpression4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression5Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"willburden.hale.Hale.Expression4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression5Access().getGreaterThanLeftAction_1_3_0(),
							$current);
					}
				)
				otherlv_11='>'
				{
					newLeafNode(otherlv_11, grammarAccess.getExpression5Access().getGreaterThanSignKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression5Access().getRightExpression4ParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=ruleExpression4
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression5Rule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"willburden.hale.Hale.Expression4");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression4
entryRuleExpression4 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression4Rule()); }
	iv_ruleExpression4=ruleExpression4
	{ $current=$iv_ruleExpression4.current; }
	EOF;

// Rule Expression4
ruleExpression4 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression4Access().getExpression3ParserRuleCall_0());
		}
		this_Expression3_0=ruleExpression3
		{
			$current = $this_Expression3_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression4Access().getAdditionLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='+'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpression4Access().getPlusSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression4Access().getRightExpression3ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression3
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression4Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"willburden.hale.Hale.Expression3");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression4Access().getSubtractionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='-'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression4Access().getHyphenMinusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression4Access().getRightExpression3ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression3
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression4Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"willburden.hale.Hale.Expression3");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression3
entryRuleExpression3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression3Rule()); }
	iv_ruleExpression3=ruleExpression3
	{ $current=$iv_ruleExpression3.current; }
	EOF;

// Rule Expression3
ruleExpression3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression3Access().getExpression2ParserRuleCall_0());
		}
		this_Expression2_0=ruleExpression2
		{
			$current = $this_Expression2_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression3Access().getMultiplicationLeftAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getExpression3Access().getAsteriskKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression3Access().getRightExpression2ParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleExpression2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression3Rule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"willburden.hale.Hale.Expression2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression3Access().getDivisionLeftAction_1_1_0(),
							$current);
					}
				)
				otherlv_5='/'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpression3Access().getSolidusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression3Access().getRightExpression2ParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleExpression2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression3Rule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"willburden.hale.Hale.Expression2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getExpression3Access().getRemainderLeftAction_1_2_0(),
							$current);
					}
				)
				otherlv_8='%'
				{
					newLeafNode(otherlv_8, grammarAccess.getExpression3Access().getPercentSignKeyword_1_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpression3Access().getRightExpression2ParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleExpression2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpression3Rule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"willburden.hale.Hale.Expression2");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression2
entryRuleExpression2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression2Rule()); }
	iv_ruleExpression2=ruleExpression2
	{ $current=$iv_ruleExpression2.current; }
	EOF;

// Rule Expression2
ruleExpression2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression2Access().getExpression1ParserRuleCall_0());
		}
		this_Expression1_0=ruleExpression1
		{
			$current = $this_Expression1_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression2Access().getExponentiationLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='**'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression2Access().getAsteriskAsteriskKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression2Access().getRightExpression1ParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression2Rule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"willburden.hale.Hale.Expression1");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression1
entryRuleExpression1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression1Rule()); }
	iv_ruleExpression1=ruleExpression1
	{ $current=$iv_ruleExpression1.current; }
	EOF;

// Rule Expression1
ruleExpression1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression1Access().getUnaryNegationAction_0_0(),
						$current);
				}
			)
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpression1Access().getHyphenMinusKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression1Access().getInnerExpression1ParserRuleCall_0_2_0());
					}
					lv_inner_2_0=ruleExpression1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression1Rule());
						}
						set(
							$current,
							"inner",
							lv_inner_2_0,
							"willburden.hale.Hale.Expression1");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression1Access().getLogicalNotAction_1_0(),
						$current);
				}
			)
			otherlv_4='not'
			{
				newLeafNode(otherlv_4, grammarAccess.getExpression1Access().getNotKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression1Access().getInnerExpression1ParserRuleCall_1_2_0());
					}
					lv_inner_5_0=ruleExpression1
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression1Rule());
						}
						set(
							$current,
							"inner",
							lv_inner_5_0,
							"willburden.hale.Hale.Expression1");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpression1Access().getPrimaryParserRuleCall_2());
		}
		this_Primary_6=rulePrimary
		{
			$current = $this_Primary_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getBindingReferenceParserRuleCall_1());
		}
		this_BindingReference_1=ruleBindingReference
		{
			$current = $this_BindingReference_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_2_1());
			}
			this_Expression_3=ruleExpression
			{
				$current = $this_Expression_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0());
		}
		this_NumberLiteral_0=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1());
		}
		this_StringLiteral_1=ruleStringLiteral
		{
			$current = $this_StringLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DOUBLE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumberLiteralAccess().getValueDOUBLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"willburden.hale.Hale.DOUBLE");
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"willburden.hale.Hale.STRING");
			}
		)
	)
;

// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	iv_ruleBinding=ruleBinding
	{ $current=$iv_ruleBinding.current; }
	EOF;

// Rule Binding
ruleBinding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getLetKeyword_0());
		}
		(
			(
				lv_mutable_1_0='mut'
				{
					newLeafNode(lv_mutable_1_0, grammarAccess.getBindingAccess().getMutableMutKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
					setWithLastConsumed($current, "mutable", lv_mutable_1_0 != null, "mut");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getBindingAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"willburden.hale.Hale.ID");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getBindingAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBindingAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBindingRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"willburden.hale.Hale.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBindingReference
entryRuleBindingReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingReferenceRule()); }
	iv_ruleBindingReference=ruleBindingReference
	{ $current=$iv_ruleBindingReference.current; }
	EOF;

// Rule BindingReference
ruleBindingReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBindingReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getBindingReferenceAccess().getBindingBindingCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getBindingBindingCrossReference_0_0());
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"willburden.hale.Hale.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='print'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintAccess().getPrintKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"willburden.hale.Hale.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getConditionsExpressionParserRuleCall_1_0());
				}
				lv_conditions_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_1_0,
						"willburden.hale.Hale.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getIfBlocksBracedBlockParserRuleCall_2_0());
				}
				lv_ifBlocks_2_0=ruleBracedBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					add(
						$current,
						"ifBlocks",
						lv_ifBlocks_2_0,
						"willburden.hale.Hale.BracedBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='elseif'
			{
				newLeafNode(otherlv_3, grammarAccess.getIfAccess().getElseifKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getConditionsExpressionParserRuleCall_3_1_0());
					}
					lv_conditions_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_4_0,
							"willburden.hale.Hale.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getIfBlocksBracedBlockParserRuleCall_3_2_0());
					}
					lv_ifBlocks_5_0=ruleBracedBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						add(
							$current,
							"ifBlocks",
							lv_ifBlocks_5_0,
							"willburden.hale.Hale.BracedBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6='else'
			{
				newLeafNode(otherlv_6, grammarAccess.getIfAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getElseBlockBracedBlockParserRuleCall_4_1_0());
					}
					lv_elseBlock_7_0=ruleBracedBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_7_0,
							"willburden.hale.Hale.BracedBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleWhile
entryRuleWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileRule()); }
	iv_ruleWhile=ruleWhile
	{ $current=$iv_ruleWhile.current; }
	EOF;

// Rule While
ruleWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getConditionExpressionParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"willburden.hale.Hale.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getBlockBracedBlockParserRuleCall_2_0());
				}
				lv_block_2_0=ruleBracedBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					set(
						$current,
						"block",
						lv_block_2_0,
						"willburden.hale.Hale.BracedBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_DOUBLE : ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
