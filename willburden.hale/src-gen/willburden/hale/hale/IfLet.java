/**
 * generated by Xtext 2.34.0
 */
package willburden.hale.hale;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>If Let</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link willburden.hale.hale.IfLet#isMutable <em>Mutable</em>}</li>
 *   <li>{@link willburden.hale.hale.IfLet#getBinding <em>Binding</em>}</li>
 *   <li>{@link willburden.hale.hale.IfLet#getType <em>Type</em>}</li>
 *   <li>{@link willburden.hale.hale.IfLet#getExpression <em>Expression</em>}</li>
 *   <li>{@link willburden.hale.hale.IfLet#getIfBlock <em>If Block</em>}</li>
 *   <li>{@link willburden.hale.hale.IfLet#getElseLet <em>Else Let</em>}</li>
 * </ul>
 *
 * @see willburden.hale.hale.HalePackage#getIfLet()
 * @model
 * @generated
 */
public interface IfLet extends If
{
  /**
   * Returns the value of the '<em><b>Mutable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Mutable</em>' attribute.
   * @see #setMutable(boolean)
   * @see willburden.hale.hale.HalePackage#getIfLet_Mutable()
   * @model
   * @generated
   */
  boolean isMutable();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#isMutable <em>Mutable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Mutable</em>' attribute.
   * @see #isMutable()
   * @generated
   */
  void setMutable(boolean value);

  /**
   * Returns the value of the '<em><b>Binding</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Binding</em>' containment reference.
   * @see #setBinding(Binding)
   * @see willburden.hale.hale.HalePackage#getIfLet_Binding()
   * @model containment="true"
   * @generated
   */
  Binding getBinding();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#getBinding <em>Binding</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Binding</em>' containment reference.
   * @see #getBinding()
   * @generated
   */
  void setBinding(Binding value);

  /**
   * Returns the value of the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' containment reference.
   * @see #setType(Type)
   * @see willburden.hale.hale.HalePackage#getIfLet_Type()
   * @model containment="true"
   * @generated
   */
  Type getType();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#getType <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' containment reference.
   * @see #getType()
   * @generated
   */
  void setType(Type value);

  /**
   * Returns the value of the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Expression</em>' containment reference.
   * @see #setExpression(Expression)
   * @see willburden.hale.hale.HalePackage#getIfLet_Expression()
   * @model containment="true"
   * @generated
   */
  Expression getExpression();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#getExpression <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Expression</em>' containment reference.
   * @see #getExpression()
   * @generated
   */
  void setExpression(Expression value);

  /**
   * Returns the value of the '<em><b>If Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>If Block</em>' containment reference.
   * @see #setIfBlock(Block)
   * @see willburden.hale.hale.HalePackage#getIfLet_IfBlock()
   * @model containment="true"
   * @generated
   */
  Block getIfBlock();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#getIfBlock <em>If Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>If Block</em>' containment reference.
   * @see #getIfBlock()
   * @generated
   */
  void setIfBlock(Block value);

  /**
   * Returns the value of the '<em><b>Else Let</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Let</em>' containment reference.
   * @see #setElseLet(ElseLet)
   * @see willburden.hale.hale.HalePackage#getIfLet_ElseLet()
   * @model containment="true"
   * @generated
   */
  ElseLet getElseLet();

  /**
   * Sets the value of the '{@link willburden.hale.hale.IfLet#getElseLet <em>Else Let</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Let</em>' containment reference.
   * @see #getElseLet()
   * @generated
   */
  void setElseLet(ElseLet value);

} // IfLet
